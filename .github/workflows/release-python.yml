name: Release Python

on:
  push:
    branches:
      - main
      - master
      - backport/**
    paths:
      - "generated/python/**"
      - ".github/workflows/release-python.yml"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    environment: PyPI
    permissions:
      id-token: write
      contents: write
      pull-requests: read
    defaults:
      run:
        working-directory: ./generated/python/datadoc_model
    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.DAPLA_BOT_APP_ID }}
          private-key: ${{ secrets.DAPLA_BOT_PRIVATE_KEY }}

      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "sha=$(git rev-parse --verify --quiet HEAD^)" >> $GITHUB_OUTPUT

      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@v2.0.3
        with:
          version-command: |
            uv version

      - name: Set version for developmental release
        if: (!steps.check-version.outputs.tag)
        run: |
          uv version "$(uv version --bump patch >> /dev/null && uv version --short).dev.$(date +%s)"

      - name: Build package
        run: |
          uv build

      - name: Publish package on PyPI
        if: steps.check-version.outputs.tag
        uses: pypa/gh-action-pypi-publish@v1.12.4

      - name: Publish package on TestPyPI
        if: (!steps.check-version.outputs.tag)
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          repository-url: https://test.pypi.org/legacy/

      - name: Publish the release notes
        uses: release-drafter/release-drafter@v6.1.0
        with:
          publish: ${{ steps.check-version.outputs.tag != '' }}
          tag: ${{ steps.check-version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
